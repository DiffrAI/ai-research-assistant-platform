name: Security Scan

on:
  schedule:
    # Run every Monday at 9 AM UTC
    - cron: '0 9 * * 1'
  workflow_dispatch:

env:
  PYTHON_VERSION: '3.11'
  NODE_VERSION: '18'

jobs:
  security-scan:
    name: Security Vulnerability Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install uv
        uses: astral-sh/setup-uv@v1
        with:
          version: latest

      - name: Install dependencies
        run: uv sync

      - name: Run safety check
        run: uv run safety check --json --output safety-report.json || true

      - name: Run bandit security scan
        run: uv run bandit -r app/ -f json -o bandit-report.json || true

      - name: Run pip-audit
        run: uv run pip-audit --format json --output pip-audit-report.json || true

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: Install frontend dependencies
        working-directory: frontend
        run: npm ci

      - name: Run npm audit
        working-directory: frontend
        run: npm audit --audit-level=moderate --json > npm-audit-report.json || true

      - name: Upload security reports
        uses: actions/upload-artifact@v4
        with:
          name: security-reports
          path: |
            safety-report.json
            bandit-report.json
            pip-audit-report.json
            frontend/npm-audit-report.json

      - name: Create security summary
        run: |
          echo "## Security Scan Summary" > security-summary.md
          echo "Date: $(date)" >> security-summary.md
          echo "" >> security-summary.md
          
          # Python vulnerabilities
          if [ -f safety-report.json ]; then
            echo "### Python Dependencies" >> security-summary.md
            echo "Safety check completed." >> security-summary.md
          fi
          
          if [ -f bandit-report.json ]; then
            echo "### Code Security" >> security-summary.md
            echo "Bandit scan completed." >> security-summary.md
          fi
          
          if [ -f pip-audit-report.json ]; then
            echo "### Pip Audit" >> security-summary.md
            echo "Pip audit completed." >> security-summary.md
          fi
          
          # Node.js vulnerabilities
          if [ -f frontend/npm-audit-report.json ]; then
            echo "### Node.js Dependencies" >> security-summary.md
            echo "NPM audit completed." >> security-summary.md
          fi
          
          echo "" >> security-summary.md
          echo "Full reports are available in the artifacts." >> security-summary.md

      - name: Upload security summary
        uses: actions/upload-artifact@v4
        with:
          name: security-summary
          path: security-summary.md

  dependency-update:
    name: Dependency Update Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install uv
        uses: astral-sh/setup-uv@v1
        with:
          version: latest

      - name: Check for outdated Python dependencies
        run: |
          echo "## Outdated Python Dependencies" > dependency-update-report.md
          echo "Date: $(date)" >> dependency-update-report.md
          echo "" >> dependency-update-report.md
          uv run pip list --outdated >> dependency-update-report.md || echo "No outdated packages found" >> dependency-update-report.md

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: Check for outdated Node.js dependencies
        working-directory: frontend
        run: |
          echo "" >> ../dependency-update-report.md
          echo "## Outdated Node.js Dependencies" >> ../dependency-update-report.md
          echo "" >> ../dependency-update-report.md
          npm outdated >> ../dependency-update-report.md || echo "No outdated packages found" >> ../dependency-update-report.md

      - name: Upload dependency report
        uses: actions/upload-artifact@v4
        with:
          name: dependency-update-report
          path: dependency-update-report.md

  notify-security:
    name: Security Notification
    runs-on: ubuntu-latest
    needs: [security-scan, dependency-update]
    if: always()
    steps:
      - name: Download security reports
        uses: actions/download-artifact@v4
        with:
          name: security-reports

      - name: Download dependency report
        uses: actions/download-artifact@v4
        with:
          name: dependency-update-report

      - name: Download security summary
        uses: actions/download-artifact@v4
        with:
          name: security-summary

      - name: Create notification
        run: |
          echo "ðŸ”’ Security Scan Completed" > notification.md
          echo "" >> notification.md
          echo "**Repository:** ${{ github.repository }}" >> notification.md
          echo "**Date:** $(date)" >> notification.md
          echo "" >> notification.md
          
          if [ -f security-summary.md ]; then
            echo "## Security Summary" >> notification.md
            cat security-summary.md >> notification.md
          fi
          
          if [ -f dependency-update-report.md ]; then
            echo "" >> notification.md
            echo "## Dependency Updates" >> notification.md
            cat dependency-update-report.md >> notification.md
          fi
          
          echo "" >> notification.md
          echo "---" >> notification.md
          echo "This is an automated security scan. Please review the findings and update dependencies as needed." >> notification.md

      - name: Upload notification
        uses: actions/upload-artifact@v4
        with:
          name: security-notification
          path: notification.md 